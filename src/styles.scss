
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

@tailwind base;
@tailwind components;
@tailwind utilities;
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$angular-common-primary: mat.define-palette(mat.$indigo-palette);
$angular-common-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$angular-common-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$angular-common-theme: mat.define-light-theme((
  color: (
    primary: $angular-common-primary,
    accent: $angular-common-accent,
    warn: $angular-common-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($angular-common-theme);

@import 'assets/boschcss/main.css';
@import '@angular/cdk/overlay-prebuilt.css';
@import 'assets/boschcss/custom.scss';
@import 'assets/boschcss/mixin.scss';
@import 'assets/boschcss/variable.scss';
@import 'highlight.js/styles/default.css';
// @import './markdown.css';

@include margin-classes;
@include padding-classes;
@include width-classes;
@include height-classes;
@include width-percent-classes;
@include height-percent-classes;

iframe {
	@apply rounded-lg;
}

.hljs {
	@apply rounded-lg;
}

.markdown-prose {
	@apply dark:prose-invert prose-p:my-0 prose-img:my-1 prose-headings:my-1 prose-pre:my-0 prose-table:my-0 prose-blockquote:my-0 prose-ul:-my-0 prose-ol:-my-0 prose-li:-my-0 whitespace-pre-line;
	
	h3 {
		font-size: 1.25rem;
	}

}

.markdown a {
	@apply underline;
}

body {
	font-family: 'boschsans', 'Helvetica Neue', Helvetica, Arial, sans-serif !important;
	min-width: 0;
	width: 100vw;
	max-width: 100vw;
	min-height: 0;
	height: 100vh;
	max-height: 100vh;
}

input, textarea, select, button {
  font-family: inherit;
} 

html {
	box-sizing: border-box;
	-ms-overflow-style: scrollbar;
}
  
*,
*::before,
*::after {
	box-sizing: inherit;
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

// custom dialog
mat-dialog-container {
	.mdc-dialog__surface {
		border-radius: 0 !important;
		padding: 10px;
	}
}

.bc-menu {
	width: 100%;
	min-width: 0;
	max-height: 300px;
	overflow: auto;

	.bc-menu__not-found {
		padding: 15px;
		display: flex;
		align-items: center;
		justify-content: center;
		text-align: center;
		min-height: 0;
		height: 100%;
		max-height: 100%;
		color: var(--bosch-gray-75);
	}

	.bc-menu__item {
		display: flex;
		padding: 15px;
		cursor: pointer;

		&:hover {
			background-color: var(--bosch-gray-90);
		}

		&.disabled {
			cursor: default;
			color: var(--bosch-gray-45);
			background-color: white;
		}
		
		&.active {
			color: var(--bosch-black);
			background-color: var(--bosch-blue-90);
		}
	}
}
